apiVersion: v1
kind: Namespace
metadata:
  name: pihole-dns

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pihole-configmap
  namespace: pihole-dns
data:
  health.sh: "#!/bin/bash\n\ntest=$(dig @$PIHOLE_SERVICE_DNS_PORT_53_UDP_ADDR +short pi-hole.net|grep
    -E -o '([0-9]{1,3}[\\.]){3}[0-9]{1,3}'|wc -l)\n\nif [[ $test -eq \"1\" ]]\nthen
    \n    exit 0\nelse\n    exit 1\nfi\n"

---
kind: Service
apiVersion: v1
metadata:
  name: pihole-service-dashboard
  namespace: pihole-dns
spec:
  selector:
     app: pihole
  ports:
  - protocol: TCP
    name: port80
    port: 80
    targetPort: 80

---
apiVersion: networking.k8s.io/v1 
kind: Ingress
metadata:
   name: pihole-ingress-dashboard
   namespace: pihole-dns
spec:
  rules:
  - http:
     paths:
     - path: /admin
       pathType: Prefix
       backend:
         service:
           name: pihole-service-dashboard
           port:
              number: 80 

---
kind: Service
apiVersion: v1
metadata:
  name: pihole-service-dns
  namespace: pihole-dns
spec:
  selector:
     app: pihole 
  type: NodePort
  ports:
  - protocol: TCP
    name: port53tcp
    nodePort: 31553 
    port: 53
    targetPort: 53
  - protocol: UDP
    name: port53udp
    nodePort: 31553
    port: 53
    targetPort: 53

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: pihole
  name: pihole
  namespace: pihole-dns
spec:
  selector:
    matchLabels:
      app: pihole
  template:
    metadata:
      labels:
        app: pihole
    spec:
      containers:
      - image: pihole/pihole:latest
        imagePullPolicy: IfNotPresent
        livenessProbe:
           exec:
              command:
              - /bin/bash
              - /tmp/health.sh
           initialDelaySeconds: 60
           failureThreshold: 5
           periodSeconds: 10
           successThreshold: 1
           timeoutSeconds: 5
        name: pihole
        env:
        - name: DNS1
          value: "192.168.100.248#5533"
        - name: DNS2
          value: "1.0.0.1#853"
        - name: TZ
          value: "America/Chicago" 
        volumeMounts:
        - mountPath: /etc/pihole
          name: etcpihole 
        - mountPath: /etc/dnsmasq.d
          name: etcdnsmasq
        - mountPath: /tmp/health.sh
          subPath: health.sh
          name: healthscript
        ports:
        - containerPort: 80
          name: port80
        - containerPort: 53
          name: port53
        readinessProbe:
           failureThreshold: 3
           httpGet:
             path: /admin
             port: 80
             scheme: HTTP
           periodSeconds: 10
           successThreshold: 1
           timeoutSeconds: 1
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
      volumes:
      - name: etcpihole
        hostPath: 
           path: /etc/pihole
      - name: etcdnsmasq
        hostPath:
           path: /etc/dnsmasq.pihole.d/
      - name: healthscript
        configMap:
           name: pihole-configmap
           items:
           - key: health.sh
             path: health.sh
